name: tests & coverage

on: [ pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Install htslib (linux)
        if: runner.os == 'Linux'
        run: |
          cd
          git clone --recursive https://github.com/samtools/htslib.git
          cd htslib && git checkout 1.11 && autoheader && autoconf && ./configure --enable-libcurl
          sudo make -j 4 install
          sudo ldconfig
          #echo "::set-env name=LD_LIBRARY_PATH::${LD_LIBRARY_PATH}:${HOME}/htslib"
          #ls -lh $HOME/htslib/*.so

      - name: Install d4tools
        run: |
          git clone https://github.com/38/d4-format
          echo 'location' >> ~/.curlrc # https://github.com/38/d4-format/pull/77#issuecomment-2044438359
          cd d4-format
          cargo build --release --all-features --package=d4binding
          sudo cp target/release/libd4binding.* /usr/local/lib
          sudo cp d4binding/include/d4.h /usr/local/include/
          sudo ldconfig || true

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # install root project, if required
      - name: Install project
        run: poetry install --no-interaction

      - name: Test with pytest
        run:
          poetry run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          files: ./coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
